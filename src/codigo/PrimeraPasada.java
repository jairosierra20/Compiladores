
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package codigo;

import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class PrimeraPasada extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public PrimeraPasada() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public PrimeraPasada(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public PrimeraPasada(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\211\000\002\002\004\000\002\064\002\000\002\065" +
    "\002\000\002\002\017\000\002\002\003\000\002\014\005" +
    "\000\002\014\003\000\002\024\004\000\002\024\004\000" +
    "\002\024\004\000\002\024\004\000\002\004\006\000\002" +
    "\035\010\000\002\035\007\000\002\035\004\000\002\035" +
    "\006\000\002\035\002\000\002\023\006\000\002\023\004" +
    "\000\002\034\003\000\002\034\003\000\002\034\003\000" +
    "\002\034\003\000\002\033\005\000\002\033\003\000\002" +
    "\025\007\000\002\055\005\000\002\055\005\000\002\055" +
    "\005\000\002\055\005\000\002\055\004\000\002\055\004" +
    "\000\002\055\002\000\002\066\002\000\002\050\006\000" +
    "\002\050\004\000\002\050\002\000\002\067\002\000\002" +
    "\070\002\000\002\006\014\000\002\071\002\000\002\072" +
    "\002\000\002\006\013\000\002\073\002\000\002\074\002" +
    "\000\002\006\013\000\002\075\002\000\002\076\002\000" +
    "\002\006\014\000\002\007\004\000\002\007\004\000\002" +
    "\007\004\000\002\007\004\000\002\007\007\000\002\007" +
    "\004\000\002\077\002\000\002\100\002\000\002\010\017" +
    "\000\002\101\002\000\002\102\002\000\002\010\014\000" +
    "\002\103\002\000\002\104\002\000\002\010\014\000\002" +
    "\105\002\000\002\106\002\000\002\010\013\000\002\041" +
    "\005\000\002\041\005\000\002\041\005\000\002\041\006" +
    "\000\002\041\005\000\002\044\003\000\002\044\003\000" +
    "\002\030\004\000\002\043\005\000\002\043\002\000\002" +
    "\027\004\000\002\042\005\000\002\042\002\000\002\026" +
    "\010\000\002\031\012\000\002\054\004\000\002\051\005" +
    "\000\002\051\002\000\002\052\004\000\002\053\005\000" +
    "\002\053\002\000\002\016\003\000\002\016\003\000\002" +
    "\016\005\000\002\016\005\000\002\046\003\000\002\046" +
    "\005\000\002\046\005\000\002\046\005\000\002\046\005" +
    "\000\002\015\005\000\002\015\007\000\002\015\005\000" +
    "\002\060\010\000\002\062\007\000\002\036\007\000\002" +
    "\036\010\000\002\061\005\000\002\061\005\000\002\061" +
    "\003\000\002\061\003\000\002\056\003\000\002\056\003" +
    "\000\002\020\005\000\002\020\005\000\002\020\005\000" +
    "\002\020\005\000\002\020\005\000\002\020\005\000\002" +
    "\020\005\000\002\020\005\000\002\020\005\000\002\020" +
    "\005\000\002\020\005\000\002\020\005\000\002\020\004" +
    "\000\002\020\004\000\002\020\002\000\002\045\006\000" +
    "\002\045\005\000\002\005\010\000\002\005\010\000\002" +
    "\011\007\000\002\012\007\000\002\017\004\000\002\040" +
    "\004\000\002\040\003\000\002\037\004\000\002\037\003" +
    "\000\002\037\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0131\000\010\003\004\026\006\037\005\001\002\000" +
    "\006\002\ufffd\026\ufffd\001\002\000\004\004\016\001\002" +
    "\000\010\003\004\026\006\037\005\001\002\000\006\002" +
    "\uff7a\026\012\001\002\000\004\002\011\001\002\000\004" +
    "\002\001\001\002\000\010\002\uff7c\023\uff7c\026\012\001" +
    "\002\000\004\002\uff79\001\002\000\006\002\uff7d\023\uff7d" +
    "\001\002\000\004\002\uff7b\001\002\000\020\003\030\026" +
    "\026\034\uffe1\036\020\051\021\053\027\055\025\001\002" +
    "\000\004\026\u0132\001\002\000\006\004\u0115\066\u0114\001" +
    "\002\000\004\004\351\001\002\000\004\026\347\001\002" +
    "\000\004\034\136\001\002\000\004\026\134\001\002\000" +
    "\004\004\122\001\002\000\022\003\030\023\uffe1\026\026" +
    "\034\uffe1\036\020\051\021\053\027\055\025\001\002\000" +
    "\004\004\036\001\002\000\022\003\030\023\uffe1\026\026" +
    "\034\uffe1\036\020\051\021\053\027\055\025\001\002\000" +
    "\004\026\032\001\002\000\022\003\030\023\uffe1\026\026" +
    "\034\uffe1\036\020\051\021\053\027\055\025\001\002\000" +
    "\006\023\uffe5\034\uffe5\001\002\000\006\023\uffe2\034\uffe2" +
    "\001\002\000\004\054\041\001\002\000\006\054\ufffb\061" +
    "\037\001\002\000\004\004\036\001\002\000\004\054\ufffc" +
    "\001\002\000\012\004\117\012\115\015\120\062\116\001" +
    "\002\000\006\026\ufff1\031\044\001\002\000\004\026\ufff6" +
    "\001\002\000\020\004\056\005\060\006\052\010\045\035" +
    "\047\056\046\066\055\001\002\000\010\004\065\005\060" +
    "\010\045\001\002\000\004\016\107\001\002\000\012\011" +
    "\uffee\026\uffee\057\uffee\061\uffee\001\002\000\012\011\uffed" +
    "\026\uffed\057\uffed\061\uffed\001\002\000\016\011\uffad\024" +
    "\104\026\uffad\047\uffad\057\uffad\061\uffad\001\002\000\012" +
    "\011\uffec\026\uffec\057\uffec\061\uffec\001\002\000\020\011" +
    "\uffaa\024\uffaa\025\100\026\uffaa\047\uffaa\057\uffaa\061\uffaa" +
    "\001\002\000\012\011\uffeb\026\uffeb\057\uffeb\061\uffeb\001" +
    "\002\000\004\004\073\001\002\000\014\010\061\016\062" +
    "\024\uffa8\025\uffa8\026\uffa8\001\002\000\004\026\ufff3\001" +
    "\002\000\054\003\uffa9\004\uffa9\011\uffa9\023\uffa9\024\uffa9" +
    "\025\uffa9\026\uffa9\030\uffa9\041\uffa9\042\uffa9\043\uffa9\044" +
    "\uffa9\045\uffa9\046\uffa9\047\uffa9\050\uffa9\053\uffa9\056\uffa9" +
    "\057\uffa9\061\uffa9\065\uffa9\001\002\000\020\004\065\005" +
    "\060\006\052\010\045\011\064\035\047\056\046\001\002" +
    "\000\004\004\063\001\002\000\054\003\uffa6\004\uffa6\011" +
    "\uffa6\023\uffa6\024\uffa6\025\uffa6\026\uffa6\030\uffa6\041\uffa6" +
    "\042\uffa6\043\uffa6\044\uffa6\045\uffa6\046\uffa6\047\uffa6\050" +
    "\uffa6\053\uffa6\056\uffa6\057\uffa6\061\uffa6\065\uffa6\001\002" +
    "\000\004\026\ufff2\001\002\000\056\003\uffa8\004\uffa8\011" +
    "\uffa8\016\062\023\uffa8\024\uffa8\025\uffa8\026\uffa8\030\uffa8" +
    "\041\uffa8\042\uffa8\043\uffa8\044\uffa8\045\uffa8\046\uffa8\047" +
    "\uffa8\050\uffa8\053\uffa8\056\uffa8\057\uffa8\061\uffa8\065\uffa8" +
    "\001\002\000\006\011\uffe9\061\071\001\002\000\004\011" +
    "\070\001\002\000\004\026\ufff4\001\002\000\016\004\065" +
    "\005\060\006\052\010\045\035\047\056\046\001\002\000" +
    "\004\011\uffea\001\002\000\004\010\074\001\002\000\016" +
    "\004\065\005\060\006\052\010\045\035\047\056\046\001" +
    "\002\000\004\011\076\001\002\000\004\026\ufff5\001\002" +
    "\000\016\011\uffac\024\uffac\026\uffac\047\uffac\057\uffac\061" +
    "\uffac\001\002\000\010\004\065\005\060\010\045\001\002" +
    "\000\020\011\uffaa\024\uffaa\025\100\026\uffaa\047\uffaa\057" +
    "\uffaa\061\uffaa\001\002\000\016\011\uffab\024\uffab\026\uffab" +
    "\047\uffab\057\uffab\061\uffab\001\002\000\014\011\uffaf\026" +
    "\uffaf\047\uffaf\057\uffaf\061\uffaf\001\002\000\010\004\065" +
    "\005\060\010\045\001\002\000\016\011\uffad\024\104\026" +
    "\uffad\047\uffad\057\uffad\061\uffad\001\002\000\014\011\uffae" +
    "\026\uffae\047\uffae\057\uffae\061\uffae\001\002\000\004\064" +
    "\110\001\002\000\004\010\111\001\002\000\004\011\112" +
    "\001\002\000\012\011\uff9c\026\uff9c\057\uff9c\061\uff9c\001" +
    "\002\000\004\011\114\001\002\000\054\003\uffa7\004\uffa7" +
    "\011\uffa7\023\uffa7\024\uffa7\025\uffa7\026\uffa7\030\uffa7\041" +
    "\uffa7\042\uffa7\043\uffa7\044\uffa7\045\uffa7\046\uffa7\047\uffa7" +
    "\050\uffa7\053\uffa7\056\uffa7\057\uffa7\061\uffa7\065\uffa7\001" +
    "\002\000\040\003\ufffa\004\ufffa\011\ufffa\023\ufffa\026\ufffa" +
    "\030\ufffa\031\ufffa\041\ufffa\042\ufffa\043\ufffa\044\ufffa\052" +
    "\ufffa\053\ufffa\056\ufffa\061\ufffa\001\002\000\040\003\ufff8" +
    "\004\ufff8\011\ufff8\023\ufff8\026\ufff8\030\ufff8\031\ufff8\041" +
    "\ufff8\042\ufff8\043\ufff8\044\ufff8\052\ufff8\053\ufff8\056\ufff8" +
    "\061\ufff8\001\002\000\040\003\ufff7\004\ufff7\011\ufff7\023" +
    "\ufff7\026\ufff7\030\ufff7\031\ufff7\041\ufff7\042\ufff7\043\ufff7" +
    "\044\ufff7\052\ufff7\053\ufff7\056\ufff7\061\ufff7\001\002\000" +
    "\040\003\ufff9\004\ufff9\011\ufff9\023\ufff9\026\ufff9\030\ufff9" +
    "\031\ufff9\041\ufff9\042\ufff9\043\ufff9\044\ufff9\052\ufff9\053" +
    "\ufff9\056\ufff9\061\ufff9\001\002\000\006\023\uffe3\034\uffe3" +
    "\001\002\000\010\023\uffdd\026\124\053\uffe0\001\002\000" +
    "\004\053\027\001\002\000\010\023\uffdd\026\124\053\uffe0" +
    "\001\002\000\004\023\126\001\002\000\004\055\127\001" +
    "\002\000\004\026\uffe8\001\002\000\004\023\uffde\001\002" +
    "\000\004\026\132\001\002\000\010\023\uffdd\026\124\053" +
    "\uffe0\001\002\000\004\023\uffdf\001\002\000\022\003\030" +
    "\023\uffe1\026\026\034\uffe1\036\020\051\021\053\027\055" +
    "\025\001\002\000\006\023\uffe7\034\uffe7\001\002\000\004" +
    "\010\137\001\002\000\004\011\140\001\002\000\030\003" +
    "\000\004\000\023\000\026\000\030\000\041\000\042\000" +
    "\043\000\044\000\053\000\056\000\001\002\000\030\003" +
    "\162\004\154\023\uff85\026\143\030\145\041\142\042\155" +
    "\043\165\044\163\053\027\056\152\001\002\000\004\004" +
    "\335\001\002\000\040\003\162\004\154\023\uff85\026\143" +
    "\030\145\033\uff85\041\142\042\155\043\165\044\163\052" +
    "\uff85\053\027\056\152\063\uff85\065\uff85\001\002\000\004" +
    "\026\331\001\002\000\004\026\327\001\002\000\004\026" +
    "\325\001\002\000\004\023\uffff\001\002\000\004\026\314" +
    "\001\002\000\004\026\312\001\002\000\004\016\275\001" +
    "\002\000\004\026\273\001\002\000\010\010\253\016\254" +
    "\031\255\001\002\000\006\004\175\010\172\001\002\000" +
    "\004\026\240\001\002\000\004\026\236\001\002\000\004" +
    "\026\234\001\002\000\004\026\232\001\002\000\040\003" +
    "\162\004\154\023\uff85\026\143\030\145\033\uff85\041\142" +
    "\042\155\043\165\044\163\052\uff85\053\027\056\152\063" +
    "\uff85\065\uff85\001\002\000\004\043\225\001\002\000\004" +
    "\026\223\001\002\000\006\004\175\010\172\001\002\000" +
    "\004\026\167\001\002\000\040\003\162\004\154\023\uff85" +
    "\026\143\030\145\033\uff85\041\142\042\155\043\165\044" +
    "\163\052\uff85\053\027\056\152\063\uff85\065\uff85\001\002" +
    "\000\014\023\uff88\033\uff88\052\uff88\063\uff88\065\uff88\001" +
    "\002\000\042\003\uffb2\004\uffb2\011\uffb2\023\uffb2\026\uffb2" +
    "\030\uffb2\041\uffb2\042\uffb2\043\uffb2\044\uffb2\045\uffb2\046" +
    "\217\050\uffb2\053\uffb2\056\uffb2\065\uffb2\001\002\000\006" +
    "\004\175\010\172\001\002\000\040\003\uffb5\004\uffb5\011" +
    "\uffb5\023\uffb5\026\uffb5\030\uffb5\041\uffb5\042\uffb5\043\uffb5" +
    "\044\uffb5\045\212\050\uffb5\053\uffb5\056\uffb5\065\uffb5\001" +
    "\002\000\030\003\162\004\154\023\uff85\026\143\030\145" +
    "\041\142\042\155\043\165\044\163\053\027\056\152\001" +
    "\002\000\006\014\176\031\200\001\002\000\016\004\uffb9" +
    "\005\uffb9\006\uffb9\007\uffb9\010\uffb9\035\uffb9\001\002\000" +
    "\016\004\065\005\060\006\204\007\203\010\045\035\201" +
    "\001\002\000\016\004\uffb8\005\uffb8\006\uffb8\007\uffb8\010" +
    "\uffb8\035\uffb8\001\002\000\042\003\uffbd\004\uffbd\011\uffbd" +
    "\023\uffbd\026\uffbd\030\uffbd\041\uffbd\042\uffbd\043\uffbd\044" +
    "\uffbd\045\uffbd\046\uffbd\050\uffbd\053\uffbd\056\uffbd\065\uffbd" +
    "\001\002\000\042\003\uffbe\004\uffbe\011\uffbe\023\uffbe\026" +
    "\uffbe\030\uffbe\041\uffbe\042\uffbe\043\uffbe\044\uffbe\045\uffbe" +
    "\046\uffbe\050\uffbe\053\uffbe\056\uffbe\065\uffbe\001\002\000" +
    "\004\007\205\001\002\000\042\003\uffbc\004\uffbc\011\uffbc" +
    "\023\uffbc\026\uffbc\030\uffbc\041\uffbc\042\uffbc\043\uffbc\044" +
    "\uffbc\045\uffbc\046\uffbc\050\uffbc\053\uffbc\056\uffbc\065\uffbc" +
    "\001\002\000\042\003\uffbb\004\uffbb\011\uffbb\023\uffbb\026" +
    "\uffbb\030\uffbb\041\uffbb\042\uffbb\043\uffbb\044\uffbb\045\uffbb" +
    "\046\uffbb\050\uffbb\053\uffbb\056\uffbb\065\uffbb\001\002\000" +
    "\004\023\207\001\002\000\004\043\210\001\002\000\004" +
    "\026\uff80\001\002\000\036\003\uffb7\004\uffb7\011\uffb7\023" +
    "\uffb7\026\uffb7\030\uffb7\041\uffb7\042\uffb7\043\uffb7\044\uffb7" +
    "\050\uffb7\053\uffb7\056\uffb7\065\uffb7\001\002\000\006\004" +
    "\175\010\172\001\002\000\040\003\uffb5\004\uffb5\011\uffb5" +
    "\023\uffb5\026\uffb5\030\uffb5\041\uffb5\042\uffb5\043\uffb5\044" +
    "\uffb5\045\212\050\uffb5\053\uffb5\056\uffb5\065\uffb5\001\002" +
    "\000\036\003\uffb6\004\uffb6\011\uffb6\023\uffb6\026\uffb6\030" +
    "\uffb6\041\uffb6\042\uffb6\043\uffb6\044\uffb6\050\uffb6\053\uffb6" +
    "\056\uffb6\065\uffb6\001\002\000\004\011\216\001\002\000" +
    "\042\003\uffba\004\uffba\011\uffba\023\uffba\026\uffba\030\uffba" +
    "\041\uffba\042\uffba\043\uffba\044\uffba\045\uffba\046\uffba\050" +
    "\uffba\053\uffba\056\uffba\065\uffba\001\002\000\006\004\175" +
    "\010\172\001\002\000\040\003\uffb4\004\uffb4\011\uffb4\023" +
    "\uffb4\026\uffb4\030\uffb4\041\uffb4\042\uffb4\043\uffb4\044\uffb4" +
    "\045\uffb4\050\uffb4\053\uffb4\056\uffb4\065\uffb4\001\002\000" +
    "\042\003\uffb2\004\uffb2\011\uffb2\023\uffb2\026\uffb2\030\uffb2" +
    "\041\uffb2\042\uffb2\043\uffb2\044\uffb2\045\uffb2\046\217\050" +
    "\uffb2\053\uffb2\056\uffb2\065\uffb2\001\002\000\040\003\uffb3" +
    "\004\uffb3\011\uffb3\023\uffb3\026\uffb3\030\uffb3\041\uffb3\042" +
    "\uffb3\043\uffb3\044\uffb3\045\uffb3\050\uffb3\053\uffb3\056\uffb3" +
    "\065\uffb3\001\002\000\040\003\162\004\154\023\uff85\026" +
    "\143\030\145\033\uff85\041\142\042\155\043\165\044\163" +
    "\052\uff85\053\027\056\152\063\uff85\065\uff85\001\002\000" +
    "\014\023\uff8e\033\uff8e\052\uff8e\063\uff8e\065\uff8e\001\002" +
    "\000\006\004\175\010\172\001\002\000\030\003\162\004" +
    "\154\026\143\030\145\041\142\042\155\043\165\044\163" +
    "\053\027\056\152\065\uff85\001\002\000\004\065\230\001" +
    "\002\000\004\026\uff7f\001\002\000\014\023\uff86\033\uff86" +
    "\052\uff86\063\uff86\065\uff86\001\002\000\040\003\162\004" +
    "\154\023\uff85\026\143\030\145\033\uff85\041\142\042\155" +
    "\043\165\044\163\052\uff85\053\027\056\152\063\uff85\065" +
    "\uff85\001\002\000\014\023\uff8c\033\uff8c\052\uff8c\063\uff8c" +
    "\065\uff8c\001\002\000\040\003\162\004\154\023\uff85\026" +
    "\143\030\145\033\uff85\041\142\042\155\043\165\044\163" +
    "\052\uff85\053\027\056\152\063\uff85\065\uff85\001\002\000" +
    "\014\023\uff91\033\uff91\052\uff91\063\uff91\065\uff91\001\002" +
    "\000\040\003\162\004\154\023\uff85\026\143\030\145\033" +
    "\uff85\041\142\042\155\043\165\044\163\052\uff85\053\027" +
    "\056\152\063\uff85\065\uff85\001\002\000\014\023\uff90\033" +
    "\uff90\052\uff90\063\uff90\065\uff90\001\002\000\040\003\162" +
    "\004\154\023\uff85\026\143\030\145\033\uff85\041\142\042" +
    "\155\043\165\044\163\052\uff85\053\027\056\152\063\uff85" +
    "\065\uff85\001\002\000\014\023\uff8a\033\uff8a\052\uff8a\063" +
    "\uff8a\065\uff8a\001\002\000\004\050\243\001\002\000\032" +
    "\003\162\004\154\023\uff85\026\143\030\145\033\uff85\041" +
    "\142\042\155\043\165\044\163\053\027\056\152\001\002" +
    "\000\006\023\246\033\245\001\002\000\030\003\162\004" +
    "\154\023\uff85\026\143\030\145\041\142\042\155\043\165" +
    "\044\163\053\027\056\152\001\002\000\004\042\247\001" +
    "\002\000\004\026\uffb1\001\002\000\004\023\251\001\002" +
    "\000\004\042\252\001\002\000\004\026\uffb0\001\002\000" +
    "\020\004\065\005\060\006\052\010\045\011\270\035\047" +
    "\056\046\001\002\000\004\004\261\001\002\000\016\004" +
    "\257\005\060\006\052\010\045\035\047\056\046\001\002" +
    "\000\006\026\uff9e\057\uff9e\001\002\000\016\010\253\016" +
    "\062\024\uffa8\025\uffa8\026\uffa8\057\uffa8\001\002\000\006" +
    "\026\uffa0\057\uffa0\001\002\000\006\010\262\031\263\001" +
    "\002\000\020\004\065\005\060\006\052\010\045\011\265" +
    "\035\047\056\046\001\002\000\016\004\065\005\060\006" +
    "\052\010\045\035\047\056\046\001\002\000\006\026\uff9f" +
    "\057\uff9f\001\002\000\004\026\uff9b\001\002\000\004\011" +
    "\267\001\002\000\004\026\uff9a\001\002\000\006\026\uff83" +
    "\057\uff83\001\002\000\004\011\272\001\002\000\006\026" +
    "\uff84\057\uff84\001\002\000\040\003\162\004\154\023\uff85" +
    "\026\143\030\145\033\uff85\041\142\042\155\043\165\044" +
    "\163\052\uff85\053\027\056\152\063\uff85\065\uff85\001\002" +
    "\000\014\023\uff92\033\uff92\052\uff92\063\uff92\065\uff92\001" +
    "\002\000\006\060\276\064\110\001\002\000\004\010\277" +
    "\001\002\000\012\004\065\005\060\006\302\010\045\001" +
    "\002\000\010\011\uff96\047\304\061\303\001\002\000\004" +
    "\011\307\001\002\000\010\011\uff97\047\304\061\303\001" +
    "\002\000\012\004\uff94\005\uff94\006\uff94\010\uff94\001\002" +
    "\000\012\004\uff95\005\uff95\006\uff95\010\uff95\001\002\000" +
    "\012\004\065\005\060\006\302\010\045\001\002\000\004" +
    "\011\uff99\001\002\000\004\026\uff9d\001\002\000\012\004" +
    "\065\005\060\006\302\010\045\001\002\000\004\011\uff98" +
    "\001\002\000\040\003\162\004\154\023\uff85\026\143\030" +
    "\145\033\uff85\041\142\042\155\043\165\044\163\052\uff85" +
    "\053\027\056\152\063\uff85\065\uff85\001\002\000\014\023" +
    "\uff93\033\uff93\052\uff93\063\uff93\065\uff93\001\002\000\040" +
    "\003\162\004\154\023\uff85\026\143\030\145\033\uff85\041" +
    "\142\042\155\043\165\044\163\052\uff85\053\027\056\152" +
    "\063\uff85\065\uff85\001\002\000\014\023\uff8b\033\uff8b\052" +
    "\uff8b\063\uff8b\065\uff8b\001\002\000\004\023\317\001\002" +
    "\000\004\036\320\001\002\000\020\003\030\023\uffe1\026" +
    "\026\036\020\051\021\053\027\055\025\001\002\000\004" +
    "\023\323\001\002\000\006\002\ufffe\026\ufffe\001\002\000" +
    "\004\037\324\001\002\000\006\002\uff7e\026\uff7e\001\002" +
    "\000\040\003\162\004\154\023\uff85\026\143\030\145\033" +
    "\uff85\041\142\042\155\043\165\044\163\052\uff85\053\027" +
    "\056\152\063\uff85\065\uff85\001\002\000\014\023\uff8d\033" +
    "\uff8d\052\uff8d\063\uff8d\065\uff8d\001\002\000\040\003\162" +
    "\004\154\023\uff85\026\143\030\145\033\uff85\041\142\042" +
    "\155\043\165\044\163\052\uff85\053\027\056\152\063\uff85" +
    "\065\uff85\001\002\000\014\023\uff89\033\uff89\052\uff89\063" +
    "\uff89\065\uff89\001\002\000\040\003\162\004\154\023\uff85" +
    "\026\143\030\145\033\uff85\041\142\042\155\043\165\044" +
    "\163\052\uff85\053\027\056\152\063\uff85\065\uff85\001\002" +
    "\000\014\023\uff8f\033\uff8f\052\uff8f\063\uff8f\065\uff8f\001" +
    "\002\000\014\023\uff87\033\uff87\052\uff87\063\uff87\065\uff87" +
    "\001\002\000\004\057\340\001\002\000\006\016\336\031" +
    "\255\001\002\000\004\004\337\001\002\000\004\031\263" +
    "\001\002\000\006\004\342\005\341\001\002\000\030\003" +
    "\162\004\154\026\143\030\145\041\142\042\155\043\165" +
    "\044\163\053\027\056\152\063\uff85\001\002\000\030\003" +
    "\162\004\154\026\143\030\145\041\142\042\155\043\165" +
    "\044\163\053\027\056\152\063\uff85\001\002\000\004\063" +
    "\344\001\002\000\004\026\uff81\001\002\000\004\063\346" +
    "\001\002\000\004\026\uff82\001\002\000\022\003\030\023" +
    "\uffe1\026\026\034\uffe1\036\020\051\021\053\027\055\025" +
    "\001\002\000\006\023\uffe6\034\uffe6\001\002\000\004\010" +
    "\352\001\002\000\006\004\355\011\354\001\002\000\004" +
    "\011\374\001\002\000\032\003\uffc1\004\uffc1\023\uffc1\026" +
    "\uffc1\030\uffc1\041\uffc1\042\uffc1\043\uffc1\044\uffc1\053\uffc1" +
    "\054\041\056\uffc1\001\002\000\004\054\041\001\002\000" +
    "\006\011\uffef\061\357\001\002\000\004\004\355\001\002" +
    "\000\004\011\ufff0\001\002\000\030\003\162\004\154\023" +
    "\uff85\026\143\030\145\041\142\042\155\043\165\044\163" +
    "\053\027\056\152\001\002\000\030\003\uffc4\004\uffc4\023" +
    "\uffc4\026\uffc4\030\uffc4\041\uffc4\042\uffc4\043\uffc4\044\uffc4" +
    "\053\uffc4\056\uffc4\001\002\000\030\003\162\004\154\023" +
    "\uff85\026\143\030\145\041\142\042\155\043\165\044\163" +
    "\053\027\056\152\001\002\000\004\023\uffc3\001\002\000" +
    "\004\023\366\001\002\000\004\051\367\001\002\000\004" +
    "\026\uffc2\001\002\000\004\023\uffc0\001\002\000\004\023" +
    "\372\001\002\000\004\051\373\001\002\000\004\026\uffbf" +
    "\001\002\000\032\003\uffc7\004\uffc7\023\uffc7\026\uffc7\030" +
    "\uffc7\041\uffc7\042\uffc7\043\uffc7\044\uffc7\053\uffc7\054\041" +
    "\056\uffc7\001\002\000\030\003\uffca\004\uffca\026\uffca\030" +
    "\uffca\041\uffca\042\uffca\043\uffca\044\uffca\052\uffca\053\uffca" +
    "\056\uffca\001\002\000\030\003\162\004\154\023\uff85\026" +
    "\143\030\145\041\142\042\155\043\165\044\163\053\027" +
    "\056\152\001\002\000\004\023\uffc6\001\002\000\004\023" +
    "\u0101\001\002\000\004\051\u0102\001\002\000\004\026\uffc5" +
    "\001\002\000\030\003\162\004\154\026\143\030\145\041" +
    "\142\042\155\043\165\044\163\052\uff85\053\027\056\152" +
    "\001\002\000\004\052\uffc9\001\002\000\004\052\u0107\001" +
    "\002\000\004\026\012\001\002\000\012\004\u010a\005\u0108" +
    "\006\u010c\035\u0109\001\002\000\004\026\uffd0\001\002\000" +
    "\004\026\uffce\001\002\000\006\010\u010d\026\uffcf\001\002" +
    "\000\004\026\uffcb\001\002\000\004\026\uffcd\001\002\000" +
    "\020\004\u010e\005\060\006\052\010\045\011\270\035\047" +
    "\056\046\001\002\000\016\011\uffa8\016\062\024\uffa8\025" +
    "\uffa8\054\041\061\uffa8\001\002\000\004\011\u0110\001\002" +
    "\000\004\026\uffcc\001\002\000\004\023\u0112\001\002\000" +
    "\004\051\u0113\001\002\000\004\026\uffc8\001\002\000\004" +
    "\010\u0124\001\002\000\004\010\u0116\001\002\000\006\004" +
    "\uffdc\011\u0118\001\002\000\004\004\355\001\002\000\030" +
    "\003\uffd9\004\uffd9\023\uffd9\026\uffd9\030\uffd9\041\uffd9\042" +
    "\uffd9\043\uffd9\044\uffd9\053\uffd9\056\uffd9\001\002\000\030" +
    "\003\162\004\154\023\uff85\026\143\030\145\041\142\042" +
    "\155\043\165\044\163\053\027\056\152\001\002\000\004" +
    "\023\uffd8\001\002\000\004\023\u011c\001\002\000\004\036" +
    "\u011d\001\002\000\004\026\uffd7\001\002\000\004\011\u011f" +
    "\001\002\000\030\003\162\004\154\023\uff85\026\143\030" +
    "\145\041\142\042\155\043\165\044\163\053\027\056\152" +
    "\001\002\000\004\023\uffdb\001\002\000\004\023\u0122\001" +
    "\002\000\004\036\u0123\001\002\000\004\026\uffda\001\002" +
    "\000\006\004\uffd3\011\u0126\001\002\000\004\004\355\001" +
    "\002\000\030\003\uffd6\004\uffd6\023\uffd6\026\uffd6\030\uffd6" +
    "\041\uffd6\042\uffd6\043\uffd6\044\uffd6\053\uffd6\056\uffd6\001" +
    "\002\000\030\003\162\004\154\023\uff85\026\143\030\145" +
    "\041\142\042\155\043\165\044\163\053\027\056\152\001" +
    "\002\000\004\023\uffd5\001\002\000\004\023\u012a\001\002" +
    "\000\004\036\u012b\001\002\000\004\026\uffd4\001\002\000" +
    "\004\011\u012d\001\002\000\030\003\162\004\154\023\uff85" +
    "\026\143\030\145\041\142\042\155\043\165\044\163\053" +
    "\027\056\152\001\002\000\004\023\uffd2\001\002\000\004" +
    "\023\u0130\001\002\000\004\036\u0131\001\002\000\004\026" +
    "\uffd1\001\002\000\022\003\030\023\uffe1\026\026\034\uffe1" +
    "\036\020\051\021\053\027\055\025\001\002\000\006\023" +
    "\uffe4\034\uffe4\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0131\000\006\002\006\037\007\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\002\006\037\014\001\001" +
    "\000\004\040\012\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\040\013\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\004\023\006\016\010" +
    "\030\025\021\055\022\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\004\023" +
    "\006\016\010\030\025\021\055\120\001\001\000\004\014" +
    "\034\001\001\000\014\004\023\006\016\010\030\025\021" +
    "\055\033\001\001\000\002\001\001\000\014\004\023\006" +
    "\016\010\030\025\021\055\032\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\024\041\001\001\000\002\001" +
    "\001\000\004\014\037\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\035\042\001\001\000\002\001\001\000" +
    "\014\016\052\034\056\052\050\054\047\062\053\001\001" +
    "\000\010\016\052\052\050\054\112\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\051\102" +
    "\001\001\000\002\001\001\000\004\053\076\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\016\016\052\033\066\034" +
    "\065\052\050\054\047\062\053\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\016" +
    "\016\052\033\071\034\065\052\050\054\047\062\053\001" +
    "\001\000\002\001\001\000\002\001\001\000\016\016\052" +
    "\033\074\034\065\052\050\054\047\062\053\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\016\100\001\001\000\004\053\101\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\016\052\052\104\001\001" +
    "\000\004\051\105\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\050\124\066\122\001\001\000\004\004" +
    "\130\001\001\000\006\050\127\066\122\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\050\132\066\122\001\001" +
    "\000\002\001\001\000\014\004\023\006\016\010\030\025" +
    "\021\055\134\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\064\140\001\001\000\032\004" +
    "\150\005\163\011\145\012\160\015\157\020\146\026\156" +
    "\031\143\036\155\045\165\060\152\062\147\001\001\000" +
    "\004\015\333\001\001\000\032\004\150\005\163\011\145" +
    "\012\160\015\157\020\332\026\156\031\143\036\155\045" +
    "\165\060\152\062\147\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\065\315\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\027\172\030\241\041" +
    "\170\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\032\004\150\005\163\011" +
    "\145\012\160\015\157\020\230\026\156\031\143\036\155" +
    "\045\165\060\152\062\147\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\027\172\030\173\041\170\001\001" +
    "\000\002\001\001\000\032\004\150\005\163\011\145\012" +
    "\160\015\157\020\167\026\156\031\143\036\155\045\165" +
    "\060\152\062\147\001\001\000\002\001\001\000\004\042" +
    "\217\001\001\000\010\027\172\030\214\041\170\001\001" +
    "\000\004\043\210\001\001\000\032\004\150\005\163\011" +
    "\145\012\160\015\157\020\205\026\156\031\143\036\155" +
    "\045\165\060\152\062\147\001\001\000\004\044\176\001" +
    "\001\000\002\001\001\000\004\016\201\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\027\212\041\170\001\001\000\004\043\213\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\041\220\001\001\000\002\001\001\000\004\042\221" +
    "\001\001\000\002\001\001\000\032\004\150\005\163\011" +
    "\145\012\160\015\157\020\223\026\156\031\143\036\155" +
    "\045\165\060\152\062\147\001\001\000\002\001\001\000" +
    "\010\027\172\030\225\041\170\001\001\000\032\004\150" +
    "\005\163\011\145\012\160\015\157\020\226\026\156\031" +
    "\143\036\155\045\165\060\152\062\147\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\032\004" +
    "\150\005\163\011\145\012\160\015\157\020\232\026\156" +
    "\031\143\036\155\045\165\060\152\062\147\001\001\000" +
    "\002\001\001\000\032\004\150\005\163\011\145\012\160" +
    "\015\157\020\234\026\156\031\143\036\155\045\165\060" +
    "\152\062\147\001\001\000\002\001\001\000\032\004\150" +
    "\005\163\011\145\012\160\015\157\020\236\026\156\031" +
    "\143\036\155\045\165\060\152\062\147\001\001\000\002" +
    "\001\001\000\032\004\150\005\163\011\145\012\160\015" +
    "\157\020\240\026\156\031\143\036\155\045\165\060\152" +
    "\062\147\001\001\000\002\001\001\000\002\001\001\000" +
    "\032\004\150\005\163\011\145\012\160\015\157\020\243" +
    "\026\156\031\143\036\155\045\165\060\152\062\147\001" +
    "\001\000\002\001\001\000\032\004\150\005\163\011\145" +
    "\012\160\015\157\020\247\026\156\031\143\036\155\045" +
    "\165\060\152\062\147\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\016\016\052\033\270\034\065\052\050\054\047" +
    "\062\053\001\001\000\002\001\001\000\016\016\052\034" +
    "\257\045\255\052\050\054\047\062\053\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\016\016\052\033\265\034\065\052\050\054\047" +
    "\062\053\001\001\000\014\016\052\034\263\052\050\054" +
    "\047\062\053\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\032\004\150\005\163" +
    "\011\145\012\160\015\157\020\273\026\156\031\143\036" +
    "\155\045\165\060\152\062\147\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\016\052\052" +
    "\050\054\277\061\300\001\001\000\004\056\307\001\001" +
    "\000\002\001\001\000\004\056\304\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\016\052\052\050\054\277" +
    "\061\305\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\016\052\052\050\054\277\061\310\001\001\000\002" +
    "\001\001\000\032\004\150\005\163\011\145\012\160\015" +
    "\157\020\312\026\156\031\143\036\155\045\165\060\152" +
    "\062\147\001\001\000\002\001\001\000\032\004\150\005" +
    "\163\011\145\012\160\015\157\020\314\026\156\031\143" +
    "\036\155\045\165\060\152\062\147\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\004\023" +
    "\006\016\010\030\025\021\055\320\001\001\000\004\017" +
    "\321\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\032\004\150\005\163\011\145\012\160\015" +
    "\157\020\325\026\156\031\143\036\155\045\165\060\152" +
    "\062\147\001\001\000\002\001\001\000\032\004\150\005" +
    "\163\011\145\012\160\015\157\020\327\026\156\031\143" +
    "\036\155\045\165\060\152\062\147\001\001\000\002\001" +
    "\001\000\032\004\150\005\163\011\145\012\160\015\157" +
    "\020\331\026\156\031\143\036\155\045\165\060\152\062" +
    "\147\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\032\004\150\005\163\011\145" +
    "\012\160\015\157\020\344\026\156\031\143\036\155\045" +
    "\165\060\152\062\147\001\001\000\032\004\150\005\163" +
    "\011\145\012\160\015\157\020\342\026\156\031\143\036" +
    "\155\045\165\060\152\062\147\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\004\023\006\016\010\030\025\021\055\347\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\023\352\001" +
    "\001\000\002\001\001\000\006\024\361\105\360\001\001" +
    "\000\004\024\355\001\001\000\002\001\001\000\004\023" +
    "\357\001\001\000\002\001\001\000\032\004\150\005\163" +
    "\011\145\012\160\015\157\020\367\026\156\031\143\036" +
    "\155\045\165\060\152\062\147\001\001\000\004\103\362" +
    "\001\001\000\032\004\150\005\163\011\145\012\160\015" +
    "\157\020\363\026\156\031\143\036\155\045\165\060\152" +
    "\062\147\001\001\000\004\104\364\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\106\370" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\024\374\101\375\001\001\000\004\077\u0102" +
    "\001\001\000\032\004\150\005\163\011\145\012\160\015" +
    "\157\020\376\026\156\031\143\036\155\045\165\060\152" +
    "\062\147\001\001\000\004\102\377\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\032\004\150" +
    "\005\163\011\145\012\160\015\157\020\u0103\026\156\031" +
    "\143\036\155\045\165\060\152\062\147\001\001\000\004" +
    "\100\u0104\001\001\000\004\007\u0105\001\001\000\004\040" +
    "\u0110\001\001\000\004\045\u010a\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\020\016\052\023\u010e\033\270\034\065" +
    "\052\050\054\047\062\053\001\001\000\004\024\355\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\067\u0116\001\001\000\004\023\u011d" +
    "\001\001\000\004\071\u0118\001\001\000\032\004\150\005" +
    "\163\011\145\012\160\015\157\020\u0119\026\156\031\143" +
    "\036\155\045\165\060\152\062\147\001\001\000\004\072" +
    "\u011a\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\032\004\150\005\163\011" +
    "\145\012\160\015\157\020\u011f\026\156\031\143\036\155" +
    "\045\165\060\152\062\147\001\001\000\004\070\u0120\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\075\u0124\001\001\000\004\023\u012b\001\001\000" +
    "\004\073\u0126\001\001\000\032\004\150\005\163\011\145" +
    "\012\160\015\157\020\u0127\026\156\031\143\036\155\045" +
    "\165\060\152\062\147\001\001\000\004\074\u0128\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\032\004\150\005\163\011\145\012\160" +
    "\015\157\020\u012d\026\156\031\143\036\155\045\165\060" +
    "\152\062\147\001\001\000\004\076\u012e\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\004" +
    "\023\006\016\010\030\025\021\055\u0132\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$PrimeraPasada$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$PrimeraPasada$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$PrimeraPasada$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



	public String resultado="";
	//public Fila tipo;
        public Tabla tabla = new Tabla();
        public String cadena="";
        public String cadena2="";
        public String cadena3="";
        public String Ambito = "P";
        public int contF = 0;
        public int contSU = 0;
         public int contS = 0;
         public int cont2=0;
	public int contador = 1;
        
       
        
 public void semantic_error(String valor) throws java.lang.Exception {
        Ventana.notificar_er("Error de tipo, el error de tipo , es el error de tipo: "+ valor );
    }



  
    public void syntax_error(Symbol s){
        
    }

   public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
   
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$PrimeraPasada$actions {




  private final PrimeraPasada parser;

  /** Constructor */
  CUP$PrimeraPasada$actions(PrimeraPasada parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$PrimeraPasada$do_action_part00000000(
    int                        CUP$PrimeraPasada$act_num,
    java_cup.runtime.lr_parser CUP$PrimeraPasada$parser,
    java.util.Stack            CUP$PrimeraPasada$stack,
    int                        CUP$PrimeraPasada$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$PrimeraPasada$result;

      /* select the action based on the action number */
      switch (CUP$PrimeraPasada$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= PROGRAMA EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		RESULT = start_val;
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$PrimeraPasada$parser.done_parsing();
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // NT$0 ::= 
            {
              Object RESULT =null;
 Ambito = "P.M"; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$0",50, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // NT$1 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
 Ambito = "P"; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$1",51, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIO ::= SentenciaModulo Identificador CUERPO_ESTRUCTURA Main parentesisE parentesisC NT$0 CUERPO NT$1 End Sub CUERPO_ESTRUCTURA FINAL 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-12)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // INICIO ::= error 
            {
              Object RESULT =null;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // VARIABLES ::= Identificador coma VARIABLES 
            {
              Object RESULT =null;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("VARIABLES",10, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // VARIABLES ::= Identificador 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
             
             RESULT = n1;
    
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("VARIABLES",10, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // TIPODATO ::= AS Integer 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            
             RESULT = n2; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("TIPODATO",18, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // TIPODATO ::= AS Boolean 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            
             RESULT = n2; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("TIPODATO",18, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // TIPODATO ::= AS String 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
         
             RESULT = n2; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("TIPODATO",18, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // TIPODATO ::= AS Identificador 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		

                

             
          
             RESULT = n2; 

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("TIPODATO",18, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // DECLARACION ::= Dim VARIABLES TIPODATO IGUALDAD 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
     
   
int cont=0;
          for (int i =0; i < tabla.getListaSimbolo().size();i++){
// && (Ambito.contains(tabla.getListaSimbolo().get(i).getAmbito()) || (tabla.getListaSimbolo().get(i).getAmbito()).contains( Ambito ))
        if(n2.toString().equals(tabla.getListaSimbolo().get(i).getNombreVar()) && (Ambito.equals(tabla.getListaSimbolo().get(i).getAmbito()) || (tabla.getListaSimbolo().get(i).getAmbito()).equals( Ambito ))){
cont++;



}


}
    if(n4 != null){
  
    if(cont==0){
     if((n3.toString()).equals(n4.toString())){
        Fila Fila1 = new Fila(n3.toString() , n2.toString(), Ambito, 0);
        tabla.getListaSimbolo().add(Fila1);

    }else {

       // semantic_error("La variable no es del mismo tipo que el asignado" );
    }
}else{
semantic_error("La variable "+n2.toString()+" ya existe"   + "| Linea: " + n2right + " Columna: " + n2left);
}


 
    }else{
        
         if(cont==0){
        tabla.getListaSimbolo().add(new Fila(n3.toString() , n2.toString() , Ambito,0));
}else{
         semantic_error("La variable "+n2.toString()+" ya existe"  + "| Linea: " + n2right + " Columna: " + n2left );
}

            }

            String xd = "";
            xd = "(" + n2.toString()  + " x " + n3.toString() + ")";

                


RESULT = xd;





              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("DECLARACION",2, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // IGUALDAD ::= Igual New Identificador parentesisE PARAMETROS2 parentesisC 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
         
            if (n5 != null){
          
            Funcion  TipoF  = new Funcion();
          String retor = "";
         
          String revisar = tabla.BuscarTipoFuncion(n3.toString());

              
           
              if(!revisar.equals("error_tipo")){
                TipoF = tabla.esFuncion(n3.toString());
             
                if((n5.toString()).equals(TipoF.getArgumentos())){

                    
                    retor = TipoF.getRetorno();


                }
            }else {
                // semantic_error("Error tipo la variable   " + n3.toString() + "   no se encuentra" );
            }
  
                 

                RESULT = retor;
}
            
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("IGUALDAD",27, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // IGUALDAD ::= Igual Identificador parentesisE PARAMETROS2 parentesisC 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
         
            if (n5 != null){
          
            Funcion  TipoF  = new Funcion();
          String retor = "";
         
          String revisar = tabla.BuscarTipoFuncion(n3.toString());

             
           
              if(!revisar.equals("error_tipo")){
                TipoF = tabla.esFuncion(n3.toString());
             
                if((n5.toString()).equals(TipoF.getArgumentos())){

                    
                    retor = TipoF.getRetorno();


                }
            }else {
                 //semantic_error("Error tipo la variable   " + n3.toString() + "   no se encuentra" );
            }
  
                  

                RESULT = retor;
}
            
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("IGUALDAD",27, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // IGUALDAD ::= Igual DATO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
               
              String revisar = tabla.BuscarTipoN(n2.toString());
             
             if(!revisar.equals("error_tipo")){
                cadena = revisar;
            }else {
                 //semantic_error("Error tipo la variable " + n2.toString() + " no se encuentra" );
            }
          
             
             RESULT = cadena;

             
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("IGUALDAD",27, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // IGUALDAD ::= Igual Identificador parentesisE parentesisC 
            {
              Object RESULT =null;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		

               
            Funcion  TipoF  = new Funcion();
          String retor = "";
         
          String revisar = tabla.BuscarTipoFuncion(n3.toString());

   
           
              if(!revisar.equals("error_tipo")){
                 TipoF = tabla.esFuncion(n3.toString());
             
                if((TipoF.getArgumentos()).equals("void")){

                    
                    retor = TipoF.getRetorno();


                }
            }
  
                

                RESULT = retor;
            
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("IGUALDAD",27, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // IGUALDAD ::= 
            {
              Object RESULT =null;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("IGUALDAD",27, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // PARAMETROS ::= Identificador TIPODATO coma PARAMETROS 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
                if(!(Ambito.contains("P.SU")) || (Ambito.equals("P"))){
                    int temp = contF + 1;
                    Ambito = "P.F."+temp;

                }


                    
                if ((n4 != null) && (n2 != null)) {
                cadena = n4.toString()+ "x" + n2.toString() ;
            
                   tabla.getListaSimbolo().add(new Fila(n2.toString() , n1.toString(), Ambito , 0));
             
             RESULT = cadena;

             }
             
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("PARAMETROS",17, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // PARAMETROS ::= Identificador TIPODATO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
                if(!(Ambito.contains("P.SU"))){
                    int temp = contF + 1;
                    Ambito = "P.F."+temp;

                }

               tabla.getListaSimbolo().add(new Fila(n2.toString() , n1.toString() , Ambito , 0));
             if (n2 != null){
             RESULT = n2;}
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("PARAMETROS",17, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // DATO ::= Op_Booleano 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
              
                 
             RESULT = "Boolean";
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("DATO",26, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // DATO ::= ARITMETICOS 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
           
             if (n1 != null)
             RESULT = n1;
              
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("DATO",26, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // DATO ::= Cadena 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
           
           
             RESULT = "String";
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("DATO",26, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // DATO ::= LEER 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
              if (n1 != null)
             RESULT = n1;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("DATO",26, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // PARAMETROS2 ::= DATO coma PARAMETROS2 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
           
           // String revisar = tabla.BuscarTipoN(n1.toString());
             
             if(!(n1.toString()).equals("error_tipo")){
                cadena =  n3.toString()+ "x" + n1.toString() ;
            }else {
              
                 //semantic_error("Error tipo la variable sip aqui tamos xD " + n1.toString() + "no se encuentra" );
            }
               
         
             
             RESULT = cadena;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("PARAMETROS2",25, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // PARAMETROS2 ::= DATO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            String cad = "";
            //String revisar = tabla.BuscarTipoN(n1.toString());
             
             if(!(n1.toString()).equals("error_tipo")){
                cad = n1.toString();
            } else {
                   
                // semantic_error("Error tipo la variable y aqui me presento " + n1.toString() + "no se encuentra" );
            }
          
             
             RESULT = cad;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("PARAMETROS2",25, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ESTRUCTURA ::= struct Identificador PARA_STRUCK End struct 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
       
            Record registro = new Record();
        
        if (!(cadena2.equals(""))){
            

            cadena3 = "Record(" + cadena2 + ")";
            //System.out.println("el registro masizo " + cadena3);

        //Fila Fila1 = new Fila(cadena3 , n2.toString());
        //tabla.getListaSimbolo().add(Fila1);
                
        registro = new Record (cadena3);
        
        registro.obtenerVariables();
        registro.impresion();

     
        //registro.impresion();


        int cont=0;
          for (int i =0; i < tabla.getListaSimbolo().size();i++){
        if(n2.toString().equals(tabla.getListaSimbolo().get(i).getNombreVar()) ){
cont++;



}


}
    
        
         if(cont==0){
        tabla.getListaSimbolo().add(new Fila(registro,n2.toString(),Ambito));
        cadena2 = "";
}else{
         semantic_error("La variable "+n2.toString()+" ya existe"  + "| Linea: " + n2right + " Columna: " + n2left );
}
        
        

         

      
        
             }else{
 int cont=0;
          for (int i =0; i < tabla.getListaSimbolo().size();i++){
        if(n2.toString().equals(tabla.getListaSimbolo().get(i).getNombreVar()) ){
cont++;



}


}
    
        
         if(cont==0){
        Fila Fila1 = new Fila("void" , n2.toString(),Ambito,0);
            tabla.getListaSimbolo().add(Fila1);
}else{
         semantic_error("La variable "+n2.toString()+" ya existe"  + "| Linea: " + n2right + " Columna: " + n2left );
}
             
            
             
                }
            // RESULT = nd;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CUERPO_ESTRUCTURA ::= DECLARACION Enter CUERPO_ESTRUCTURA 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		
       // cadena2 = "";
        //RESULT = nd;  
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO_ESTRUCTURA",43, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CUERPO_ESTRUCTURA ::= ESTRUCTURA Enter CUERPO_ESTRUCTURA 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		
          
          //  RESULT = nd;  
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO_ESTRUCTURA",43, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // CUERPO_ESTRUCTURA ::= FUNCION Enter CUERPO_ESTRUCTURA 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		
           
           // RESULT = nd;  
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO_ESTRUCTURA",43, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // CUERPO_ESTRUCTURA ::= PARA_SUB Enter CUERPO_ESTRUCTURA 
            {
              Object RESULT =null;
		
           
          //  RESULT = nd;  
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO_ESTRUCTURA",43, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // CUERPO_ESTRUCTURA ::= Enter CUERPO_ESTRUCTURA 
            {
              Object RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object x = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		
         //if (n2 != null)
            //RESULT = n2;


        
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO_ESTRUCTURA",43, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // CUERPO_ESTRUCTURA ::= error CUERPO_ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO_ESTRUCTURA",43, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // CUERPO_ESTRUCTURA ::= 
            {
              Object RESULT =null;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO_ESTRUCTURA",43, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // NT$2 ::= 
            {
              Object RESULT =null;
 
contS++;
Ambito = "P.S"+ "."+contS ;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$2",52, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // PARA_STRUCK ::= NT$2 DECLARACION Enter PARA_STRUCK 
            {
              Object RESULT =null;
              // propagate RESULT from NT$2
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
                 
            

                String variableOP = n2.toString();
             
           
              
            if (n3 != null){
             
            cadena2 =  n2.toString()+ " x " + n3.toString() ;

                RESULT = cadena2;
            }else{

                    
                    cadena2 =  n2.toString() + cadena2 ;
                   
                    RESULT = cadena2;
                }

Ambito = "P";


                
            


              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("PARA_STRUCK",38, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // PARA_STRUCK ::= Enter PARA_STRUCK 
            {
              Object RESULT =null;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("PARA_STRUCK",38, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // PARA_STRUCK ::= 
            {
              Object RESULT =null;
		




    
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("PARA_STRUCK",38, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // NT$3 ::= 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
 contSU++; Ambito = "P.SU"+ "." +contSU;  
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$3",53, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // NT$4 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
 Ambito = "P"; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$4",54, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // PARA_SUB ::= Sub Identificador parentesisE NT$3 PARAMETROS parentesisC CUERPO NT$4 End Sub 
            {
              Object RESULT =null;
              // propagate RESULT from NT$4
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n7left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n7right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n7 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n8left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n8right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n8 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		

            int cont=0;
          for (int i =0; i < tabla.getListaSimbolo().size();i++){
        if(n2.toString().equals(tabla.getListaSimbolo().get(i).getNombreVar()) ){
cont++;



}


}
    
        
         if(cont==0){
        Fila Fila1 = new Fila(new Funcion(n4.toString(), "void" ) , n2.toString() , Ambito);
             tabla.getListaSimbolo().add(Fila1);
}else{
         semantic_error("La variable "+n2.toString()+" ya existe"  + "| Linea: " + n2right + " Columna: " + n2left );
}
            
             

              
             
           
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("PARA_SUB",4, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // NT$5 ::= 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
 contSU++; Ambito = "P.SU"+ "." +contSU; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$5",55, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // NT$6 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
Ambito = "P"; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$6",56, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // PARA_SUB ::= Sub Identificador parentesisE parentesisC NT$5 CUERPO NT$6 End Sub 
            {
              Object RESULT =null;
              // propagate RESULT from NT$6
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n7left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n7right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n7 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            int cont=0;
          for (int i =0; i < tabla.getListaSimbolo().size();i++){
        if(n2.toString().equals(tabla.getListaSimbolo().get(i).getNombreVar()) ){
cont++;



}


}
    
        
         if(cont==0){
        Fila Fila1 = new Fila(new Funcion("void", "void" ) , n2.toString(),Ambito);
             tabla.getListaSimbolo().add(Fila1);
}else{
         semantic_error("La variable "+n2.toString()+" ya existe"  + "| Linea: " + n2right + " Columna: " + n2left);
}
             
            

           
         
         
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("PARA_SUB",4, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // NT$7 ::= 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
 contSU++; Ambito = "P.SU"+ "." +contSU; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$7",57, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // NT$8 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
 Ambito = "P"; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$8",58, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // PARA_SUB ::= Sub New parentesisE parentesisC NT$7 CUERPO NT$8 End Sub 
            {
              Object RESULT =null;
              // propagate RESULT from NT$8
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n7left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n7right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n7 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		

            int cont=0;
          for (int i =0; i < tabla.getListaSimbolo().size();i++){
        if(n2.toString().equals(tabla.getListaSimbolo().get(i).getNombreVar()) ){
cont++;



}


}
    
        
         if(cont==0){
        Fila Fila1 = new Fila(new Funcion("void", "void" ) , n2.toString(),Ambito);
             tabla.getListaSimbolo().add(Fila1);
}else{
         semantic_error("La variable "+n2.toString()+" ya existe"  + "| Linea: " + n2right + " Columna: " + n2left );
}
            
       
           
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("PARA_SUB",4, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // NT$9 ::= 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
 contSU++; Ambito = "P.SU"+ "." +contSU; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$9",59, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // NT$10 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
 Ambito = "P"; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$10",60, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // PARA_SUB ::= Sub New parentesisE NT$9 PARAMETROS parentesisC CUERPO NT$10 End Sub 
            {
              Object RESULT =null;
              // propagate RESULT from NT$10
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n7left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n7right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n7 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n8left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n8right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n8 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		

           int cont=0;
          for (int i =0; i < tabla.getListaSimbolo().size();i++){
        if(n2.toString().equals(tabla.getListaSimbolo().get(i).getNombreVar()) ){
cont++;



}


}
    
        
         if(cont==0){
        Fila Fila1 = new Fila(new Funcion(n4.toString(), "void") , n2.toString(), Ambito);
            tabla.getListaSimbolo().add(Fila1);
}else{
         semantic_error("La variable "+n2.toString()+" ya existe"  + "| Linea: " + n2right + " Columna: " + n2left );
}
            

          
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("PARA_SUB",4, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // RETORNO ::= Return Numero 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
         
             
           RESULT = "Integer";
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("RETORNO",5, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // RETORNO ::= Return Identificador 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
           
            String revisar = tabla.BuscarTipoN(n2.toString());
            
             RESULT = revisar;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("RETORNO",5, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // RETORNO ::= Return Op_Booleano 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
         
             
             RESULT = "Boolean";
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("RETORNO",5, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // RETORNO ::= Return Cadena 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
          
             
           RESULT = "String";
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("RETORNO",5, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // RETORNO ::= Return Identificador parentesisE PARAMETROS parentesisC 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            
             //RESULT = nd;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("RETORNO",5, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // RETORNO ::= Return RECURSION 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
         
            // RESULT = nd;
  
           
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("RETORNO",5, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // NT$11 ::= 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
 contF++; Ambito = "P.F"+ "." +contF; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$11",61, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // NT$12 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n7left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n7right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n7 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
 Ambito = "P"; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$12",62, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // FUNCION ::= Function Identificador parentesisE PARAMETROS parentesisC TIPODATO NT$11 CUERPO NT$12 RETORNO DESPUES End Function 
            {
              Object RESULT =null;
              // propagate RESULT from NT$12
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-12)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-12)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-12)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-11)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-11)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-11)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-10)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-10)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-10)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).value;
		int n7left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n7right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n7 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n10left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n10right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n10 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n8left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n8right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n8 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n9left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n9right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n9 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
             
               int cont=0;
          for (int i =0; i < tabla.getListaSimbolo().size();i++){
        if(n2.toString().equals(tabla.getListaSimbolo().get(i).getNombreVar()) ){
cont++;



}


}
    
        
         if(cont==0){
        Fila Fila1 = new Fila(new Funcion(n4.toString(),n6.toString()) , n2.toString() ,Ambito);
             tabla.getListaSimbolo().add(Fila1);
}else{
         semantic_error("La variable "+n2.toString()+" ya existe"  + "| Linea: " + n2right + " Columna: " + n2left );
}

            

             

             
            
             

  
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("FUNCION",6, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-12)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // NT$13 ::= 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
 contF++; Ambito = "P.F"+ "." +contF; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$13",63, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // NT$14 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
 Ambito = "P"; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$14",64, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // FUNCION ::= Function Identificador parentesisE PARAMETROS parentesisC NT$13 CUERPO NT$14 End Function 
            {
              Object RESULT =null;
              // propagate RESULT from NT$14
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n7left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n7right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n7 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n8left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n8right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n8 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		

              int cont=0;
          for (int i =0; i < tabla.getListaSimbolo().size();i++){
        if(n2.toString().equals(tabla.getListaSimbolo().get(i).getNombreVar()) ){
cont++;



}


}
    
        
         if(cont==0){
        Fila Fila1 = new Fila(new Funcion(n4.toString(), "void" ) , n2.toString(),Ambito);
             tabla.getListaSimbolo().add(Fila1);
}else{
         semantic_error("La variable "+n2.toString()+" ya existe"  + "| Linea: " + n2right + " Columna: " + n2left );
}
           
            

            
             
           
         
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("FUNCION",6, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // NT$15 ::= 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
 contF++; Ambito = "P.F"+ "." +contF; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$15",65, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // NT$16 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
 Ambito = "P"; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$16",66, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // FUNCION ::= Function Identificador parentesisE parentesisC TIPODATO NT$15 CUERPO NT$16 End Function 
            {
              Object RESULT =null;
              // propagate RESULT from NT$16
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n7left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n7right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n7 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n8left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n8right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n8 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
             
             int cont=0;
          for (int i =0; i < tabla.getListaSimbolo().size();i++){
        if(n2.toString().equals(tabla.getListaSimbolo().get(i).getNombreVar()) ){
cont++;



}


}
    
        
         if(cont==0){
        Fila Fila1 = new Fila(new Funcion("void", n5.toString() ) , n2.toString(), Ambito);
             tabla.getListaSimbolo().add(Fila1);
}else{
         semantic_error("La variable "+n2.toString()+" ya existe"  + "| Linea: " + n2right + " Columna: " + n2left );
}

             

         
          
           
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("FUNCION",6, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-9)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // NT$17 ::= 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
 contF++; Ambito = "P.F"+ "." +contF; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$17",67, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // NT$18 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
 Ambito = "P"; 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("NT$18",68, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // FUNCION ::= Function Identificador parentesisE parentesisC NT$17 CUERPO NT$18 End Function 
            {
              Object RESULT =null;
              // propagate RESULT from NT$18
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-6)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n7left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n7right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n7 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		

            int cont=0;
          for (int i =0; i < tabla.getListaSimbolo().size();i++){
        if(n2.toString().equals(tabla.getListaSimbolo().get(i).getNombreVar()) ){
cont++;



}


}
    
        
         if(cont==0){
        Fila Fila1 = new Fila(new Funcion("void", "void" ) , n2.toString(),Ambito);
             tabla.getListaSimbolo().add(Fila1);
}else{
         semantic_error("La variable "+n2.toString()+" ya existe"  + "| Linea: " + n2right + " Columna: " + n2left );
}
             
             

           
            
          
           
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("FUNCION",6, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-8)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // SENTENCIA_BOOLEANA ::= Identificador COMPARACION VALORES_NUMERICOS 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            String bandera = "";
           
            String variable1 = tabla.BuscarTipoN(n1.toString());
            
            String variable2 = n3.toString();
         
            if ((!variable1.equals("error_tipo")) && (!variable2.equals("error_tipo"))){
                if ((!variable1.equals(variable2))){
                    bandera = "invalida";
                    //semantic_error("Las variables no son del mismo tipo");
                    
            } else{
                    bandera = "valida" ;
                } 
            }else{
                //semantic_error("Error tipo en el if con las variables " + n1.toString() + " o con "  + n3.toString());

                }
            
             RESULT = bandera;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("SENTENCIA_BOOLEANA",31, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // SENTENCIA_BOOLEANA ::= Identificador COMPARACION Op_Booleano 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            String bandera = "";
            String variable1 = tabla.BuscarTipoN(n1.toString());
           
            if ((!variable1.equals("error_tipo")) ){
                if ((!variable1.equals("Boolean"))){
                    //semantic_error("la variable" + n1.toString() + "no es un boolean");
            }else {
                bandera = "valido";
            }
        }else{
               // semantic_error("no se encontro la variable" + n1.toString());
          }
             RESULT = bandera;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("SENTENCIA_BOOLEANA",31, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // SENTENCIA_BOOLEANA ::= Identificador COMPARACION Cadena 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            String bandera = "";
            String variable1 = tabla.BuscarTipoN(n1.toString());

            if ((!variable1.equals("error_tipo")) ){
                if ((!variable1.equals("String"))){
                    //semantic_error("la variable" + n1.toString() + "no es un cadena");
            }else {
                bandera = "valido";
            }
        }else{
                //semantic_error("no se encontro la variable" + n1.toString());
          }
             RESULT = bandera;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("SENTENCIA_BOOLEANA",31, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // SENTENCIA_BOOLEANA ::= Identificador COMPARACION Comilla Comilla 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            String bandera = "";
             String variable1 = tabla.BuscarTipoN(n1.toString());

            if ((!variable1.equals("error_tipo")) ){
                if ((!variable1.equals("String"))){
                    //semantic_error("la variable" + n1.toString() + "no es un cadena");
            }else {
                bandera = "valido";
            }
        }else{
               // semantic_error("no se encontro la variable" + n1.toString());
          }
             RESULT = bandera;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("SENTENCIA_BOOLEANA",31, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // SENTENCIA_BOOLEANA ::= parentesisE DECLARACION_IF parentesisC 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
          
             //RESULT = nd; 
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("SENTENCIA_BOOLEANA",31, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // COMPARACION ::= OperadorRelacional 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
      
             
             RESULT = n1;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("COMPARACION",34, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // COMPARACION ::= Igual 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            
            
             RESULT = n1;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("COMPARACION",34, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // DECLARACION_IF ::= LOGICOAND LOGICOOR 
            {
              Object RESULT =null;
		
         
             //RESULT = nd;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("DECLARACION_IF",22, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // LOGICOOR ::= OR LOGICOAND LOGICOOR 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		
            
             //RESULT = nd;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("LOGICOOR",33, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // LOGICOOR ::= 
            {
              Object RESULT =null;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("LOGICOOR",33, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // LOGICOAND ::= SENTENCIA_BOOLEANA LOGICOAND_Prima 
            {
              Object RESULT =null;
		
           
             //RESULT = nd;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("LOGICOAND",21, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // LOGICOAND_Prima ::= And SENTENCIA_BOOLEANA LOGICOAND_Prima 
            {
              Object RESULT =null;
		
           
             //RESULT = nd;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("LOGICOAND_Prima",32, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // LOGICOAND_Prima ::= 
            {
              Object RESULT =null;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("LOGICOAND_Prima",32, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // SENTENCIA_IF ::= IF DECLARACION_IF then CUERPO End IF 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            
             //RESULT = nd;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("SENTENCIA_IF",20, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // ELSE_IF ::= IF DECLARACION_IF then CUERPO Else CUERPO End IF 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n7left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n7right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n7 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n8left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n8right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n8 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
           
             //RESULT = nd;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("ELSE_IF",23, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-7)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // ARITMETICOS ::= MULTIPLICACIONES ADICIONES 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
                if(n2 != null){
                    if(!(n1.toString()).equals("Integer")){
                              if((!(n1.toString()).equals("Boolean"))){
               // semantic_error("la variable " + n1.toString() + " no es un Boolean");
                    RESULT = "error_tipo";
                }else{
                    RESULT = "Boolean";
                }
                        //semantic_error("error de tipo , revise la multiplicacion" );
                            RESULT = "error_tipo" ;
                    }else{
                            RESULT = "Integer" ;

                        }
                     
                }else {
                        
                        RESULT = n1 ;
                    }
                
          
          
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("ARITMETICOS",42, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // ADICIONES ::= OPRestSuma MULTIPLICACIONES ADICIONES 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
         
            
            

            
            if((n3 != null )){
                if ((!(n3.toString()).equals("error_tipo") )){
           

            if ((!(n2.toString()).equals("error_tipo")) ){
                if ((!(n2.toString()).equals("Integer"))){
                   // semantic_error("la variable" + n2.toString() + "no es un numero");
                    RESULT = "error_tipo";
            }else {
                RESULT = "Integer";
            } }else {
                   // semantic_error("error de tipo en la adicion");
                    RESULT = "error_tipo";
                        } 
        }else{
                // semantic_error("no se encontro la variable" + n2.toString());
                RESULT = "error_tipo";
          } 
        }else{
                
            /// si no es nulo
              
                if ((!(n2.toString()).equals("error_tipo")) ){
                if ((!(n2.toString()).equals("Integer"))){
                    //semantic_error("no puede operar valores " + n2.toString() + " con enteros");
                    RESULT = "error_tipo";
            }else {
                RESULT = "Integer";
            } 
            }else {
                    //semantic_error("error de tipo en la adicion");
                    RESULT = "error_tipo";

                    }
 
                }

             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("ADICIONES",39, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // ADICIONES ::= 
            {
              Object RESULT =null;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("ADICIONES",39, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // MULTIPLICACIONES ::= VALORES_NUMERICOS MULTIPLICACIONES_PRIMA 
            {
              Object RESULT =null;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
               
                 if(n1 != null){
                    if(!(n1.toString()).equals("Integer")){
                            
                        //semantic_error("error de tipo , revise la multiplicacion" );
                            RESULT = "error_tipo" ;
                    }else{
                            RESULT = "Integer" ;

                        }
                        
                     
                }else {
                        
                        RESULT = n2.toString() ;
                    }
            
           
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("MULTIPLICACIONES",40, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // MULTIPLICACIONES_PRIMA ::= OPMultDiv VALORES_NUMERICOS MULTIPLICACIONES_PRIMA 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
             
            if((n3 != null )){
                if ((!(n3.toString()).equals("error_tipo") )){
           

            if ((!(n2.toString()).equals("error_tipo")) ){
                if ((!(n2.toString()).equals("Integer"))){
                   // semantic_error("la variable " + n2.toString() + " no es un numero");
                    RESULT = "error_tipo";
            }else {
                RESULT = "Integer";
            }
            
             }else {
                   // semantic_error("la variable" + n2.toString() + "no es un numero");
                    RESULT = "error_tipo";
                        } 
        }else{
                // semantic_error("no se encontro la variable" + n2.toString());
                RESULT = "error_tipo";
          } 
        }else{
                
            /// si no es nulo
              
                if ((!(n2.toString()).equals("error_tipo")) ){
                if ((!(n2.toString()).equals("Integer"))){
                    //semantic_error("no puede operar valores " + n2.toString() + " con enteros");
                    RESULT = "error_tipo";
            }else {
                RESULT = "Integer";
            }
           
                 }else {
                    //semantic_error("no puede operar valores " + n2.toString() + " con enteros");
                    RESULT = "error_tipo";

                    }
 
                }
           
             
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("MULTIPLICACIONES_PRIMA",41, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // MULTIPLICACIONES_PRIMA ::= 
            {
              Object RESULT =null;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("MULTIPLICACIONES_PRIMA",41, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // VALORES_NUMERICOS ::= Numero 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            
             RESULT = "Integer";
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("VALORES_NUMERICOS",12, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // VALORES_NUMERICOS ::= Identificador 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
                        String variable1 = "";

           if (((n1.toString()).toLowerCase()).equals("True".toLowerCase()) || ((n1.toString()).toLowerCase()).equals("False".toLowerCase())){
             
            variable1 = "Boolean";
            }else{
            String bandera = "";
            variable1 = tabla.BuscarTipoN(n1.toString());

            }
          
          RESULT = variable1;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("VALORES_NUMERICOS",12, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // VALORES_NUMERICOS ::= parentesisE ARITMETICOS parentesisC 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
                
                if (!((n2.toString()).equals("Integer"))){
                        RESULT = "error_tipo";
                    
                    }else{
                        RESULT = "Integer";

                    }
                
    
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("VALORES_NUMERICOS",12, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // VALORES_NUMERICOS ::= Identificador Punto Identificador 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		  
                    
                String variable1 = "";

           if (((n1.toString()).toLowerCase()).equals("True".toLowerCase()) || ((n1.toString()).toLowerCase()).equals("False".toLowerCase())){
             
            variable1 = "Boolean";
            }else{
            String bandera = "";
            variable1 = tabla.BuscarTipoN(n1.toString());

            }
          
          RESULT = variable1;
                        


                    
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("VALORES_NUMERICOS",12, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // OP_RECURSIVIDAD ::= RECURSION 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            
            // RESULT = nd;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("OP_RECURSIVIDAD",36, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // OP_RECURSIVIDAD ::= RECURSION OPRestSuma ARITMETICOS 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		
       
            // RESULT = nd;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("OP_RECURSIVIDAD",36, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // OP_RECURSIVIDAD ::= RECURSION OPMultDiv ARITMETICOS 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		
            
             //RESULT = nd;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("OP_RECURSIVIDAD",36, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // OP_RECURSIVIDAD ::= ARITMETICOS OPRestSuma RECURSION 
            {
              Object RESULT =null;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
           
            // RESULT = nd;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("OP_RECURSIVIDAD",36, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // OP_RECURSIVIDAD ::= ARITMETICOS OPMultDiv RECURSION 
            {
              Object RESULT =null;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
           
           //  RESULT = nd;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("OP_RECURSIVIDAD",36, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // ASIGNACION ::= Identificador Igual DATO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		 
                
               
                String revisar = tabla.BuscarTipoN(n1.toString()) ;
                String revisar2 = tabla.BuscarTipoN(n3.toString()) ;

                 Fila verifica = tabla.BuscarFila(n1.toString(), Ambito) ;
                Fila verifica2 = tabla.BuscarFila(n3.toString(), Ambito) ;
                
  
                   
                    if (!(verifica.getAmbito()).equals("")) {

                if(!((revisar).equals(n3.toString()))){
                     
                    //semantic_error("La variable " + n1.toString() + " no esta declarada ");
                
                }

         }else{

             
                  semantic_error("La variable " + n1.toString() + " no esta declarada en este ambito "  + "| Linea: " + n2right + " Columna: " + n2left);
                }
        
             // RESULT = nd;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("ASIGNACION",11, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // ASIGNACION ::= Identificador Punto Identificador Igual DATO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		


                    String revisar =  tabla.BuscarTipoN(n1.toString());
                    
                     
                    if( !(revisar.equals("error_tipo"))){

                        Record registro = tabla.esRecord(revisar);
                        
                        if (registro != null){
                        
                        String tipoReg = registro.buscarVariable(n3.toString());

  
                        if(tipoReg.equals("error_tipo")){
                                // semantic_error("La variable " + n3.toString() + " no esta declarada en el registro" );
                            }else{
                                if(  !(tipoReg.equals(n5.toString())) ){
                                            // semantic_error("La variable " + n3.toString() + " no es del mismo tipo al que se le intenta asignar" );

                                        }


                                }

                        }else{
                                //semantic_error("la variable " + n1.toString() + " es un record " );
                        
                                }

                    }else{
                        //semantic_error("La variable " + n1.toString() + " no es un record" );



                        }

          
         
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("ASIGNACION",11, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // ASIGNACION ::= Identificador Igual RECURSION 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		

                
      String revisar = tabla.BuscarTipoN(n1.toString());
    if (!((revisar).equals("error_tipo"))){
     if(!((revisar).equals(n3.toString()))){

        //semantic_error("La variable no es del mismo tipo que el asignado" );
    }

}else{
            //semantic_error("la variable " + n1 + " no existe ");

     }


                
            
            // RESULT = nd;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("ASIGNACION",11, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // IMPRIMIR ::= Console Punto WriteLine parentesisE CONCATENACION parentesisC 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
       
      
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("IMPRIMIR",46, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // LEER ::= Console Punto ReadLine parentesisE parentesisC 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            
            RESULT = "Integer";
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("LEER",48, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // LLAMADA_FUNCION ::= Identificador Punto Identificador parentesisE parentesisC 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
             
     
         
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("LLAMADA_FUNCION",28, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // LLAMADA_FUNCION ::= Identificador Punto Identificador parentesisE PARAMETROS2 parentesisC 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
         
       
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("LLAMADA_FUNCION",28, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // CONCATENACION ::= Cadena CONCATENABLES CONCATENACION 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
       
          
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CONCATENACION",47, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // CONCATENACION ::= ARITMETICOS CONCATENABLES CONCATENACION 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		

               
                  if (!(Character.isDigit(((n1.toString()).charAt(0))))){
                        String revision = tabla.BuscarTipoN(n1.toString());
                       
                        if (revision.equals("error_tipo")){

                             //semantic_error("la variable " + n1.toString() + " no existe ");
                            }

                    
                }
                  
                  
          
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CONCATENACION",47, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // CONCATENACION ::= Cadena 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
          

          
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CONCATENACION",47, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // CONCATENACION ::= ARITMETICOS 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
          
           
           
                       
                           

             if((n1.toString()).equals("error_tipo")){

                    //semantic_error("la variable no existe");

                    }       

                 
             
         
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CONCATENACION",47, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // CONCATENABLES ::= concatenacion 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
           
          
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CONCATENABLES",44, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // CONCATENABLES ::= coma 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
         
           
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CONCATENABLES",44, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // CUERPO ::= DECLARACION Enter CUERPO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
         
           
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO",14, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // CUERPO ::= IMPRIMIR Enter CUERPO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            
           
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO",14, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // CUERPO ::= ASIGNACION Enter CUERPO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            
            
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO",14, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // CUERPO ::= SENTENCIA_IF Enter CUERPO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
         
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO",14, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // CUERPO ::= ELSE_IF Enter CUERPO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
          
           
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO",14, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // CUERPO ::= DECLARACION_FOR Enter CUERPO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
           
            // RESULT = nd;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO",14, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // CUERPO ::= WHILE Enter CUERPO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
        
           
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO",14, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // CUERPO ::= DO_WHILE Enter CUERPO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
           
            
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO",14, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // CUERPO ::= LEER Enter CUERPO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
     
           
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO",14, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // CUERPO ::= LLAMADA_FUNCION Enter CUERPO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            
          
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO",14, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // CUERPO ::= Comentario Enter CUERPO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
          
          
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO",14, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // CUERPO ::= RECURSION Enter CUERPO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
           
             //RESULT = nd;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO",14, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // CUERPO ::= Enter CUERPO 
            {
              Object RESULT =null;
		int xleft = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object x = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
    
           
            //RESULT = n2;

           
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO",14, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // CUERPO ::= error CUERPO 
            {
              Object RESULT =null;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO",14, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // CUERPO ::= 
            {
              Object RESULT =null;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("CUERPO",14, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // RECURSION ::= Identificador parentesisE PARAMETROS2 parentesisC 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		

                
               if (n3 != null){
          
            Funcion  TipoF  = new Funcion();
          String retor = "";
         
          String revisar = tabla.BuscarTipoFuncion(n1.toString());

            
              if(!revisar.equals("error_tipo")){
                TipoF = tabla.esFuncion(n1.toString());
                if((n3.toString()).contains(TipoF.getArgumentos())){

                    retor = TipoF.getRetorno();


                }else{
               // semantic_error("Error tipo la variable   " + n1.toString() + "   no tiene esos tipos de parametros" );
            }
            }else {
                // semantic_error("Error tipo la variable   " + n1.toString() + "   no se encuentra" );
            }
                  

                RESULT = retor;
                }
            
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("RECURSION",35, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // RECURSION ::= Identificador parentesisE parentesisC 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		

                Funcion  TipoF  = new Funcion();
          String retor = "";
        
          String revisar = tabla.BuscarTipoFuncion(n1.toString());

              
           
              if(!revisar.equals("error_tipo")){
                 TipoF = tabla.esFuncion(n1.toString());
               
              
             
                if((TipoF.getArgumentos()).equals("void")){

                    
                    retor = TipoF.getRetorno();


                }else {
                        retor = "error_tipo";
                        //semantic_error("Error tipo, la funcion "+ n1.toString()+" si tiene parametros"  );
                    }

            }
            
            RESULT = retor;
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("RECURSION",35, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // DECLARACION_FOR ::= For ASIGNACION TO Numero CUERPO Next 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
           
            
                 
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("DECLARACION_FOR",3, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // DECLARACION_FOR ::= For ASIGNACION TO Identificador CUERPO Next 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-2)).value;
		int n6left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n6 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
                            String revisar = tabla.BuscarTipoN(n4.toString()); 

                            if(!(revisar.equals("Integer"))){
                               // semantic_error("error de tipo , con el id de for");
                            }
                    
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("DECLARACION_FOR",3, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-5)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // WHILE ::= While DECLARACION_IF CUERPO End While 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n4 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
            
          
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("WHILE",7, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // DO_WHILE ::= Do While DECLARACION_IF CUERPO Loop 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-3)).value;
		int n5left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n5 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		
              
        
             
              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("DO_WHILE",8, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-4)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // FINAL ::= End SentenciaModulo 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$PrimeraPasada$stack.peek()).value;
		



       
       
         




              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("FINAL",13, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // DESPUES ::= Enter DESPUES 
            {
              Object RESULT =null;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("DESPUES",30, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // DESPUES ::= Enter 
            {
              Object RESULT =null;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("DESPUES",30, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // PROGRAMA ::= Enter PROGRAMA 
            {
              Object RESULT =null;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("PROGRAMA",29, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // PROGRAMA ::= INICIO 
            {
              Object RESULT =null;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("PROGRAMA",29, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // PROGRAMA ::= INICIO DESPUES 
            {
              Object RESULT =null;

              CUP$PrimeraPasada$result = parser.getSymbolFactory().newSymbol("PROGRAMA",29, ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.elementAt(CUP$PrimeraPasada$top-1)), ((java_cup.runtime.Symbol)CUP$PrimeraPasada$stack.peek()), RESULT);
            }
          return CUP$PrimeraPasada$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$PrimeraPasada$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$PrimeraPasada$do_action(
    int                        CUP$PrimeraPasada$act_num,
    java_cup.runtime.lr_parser CUP$PrimeraPasada$parser,
    java.util.Stack            CUP$PrimeraPasada$stack,
    int                        CUP$PrimeraPasada$top)
    throws java.lang.Exception
    {
              return CUP$PrimeraPasada$do_action_part00000000(
                               CUP$PrimeraPasada$act_num,
                               CUP$PrimeraPasada$parser,
                               CUP$PrimeraPasada$stack,
                               CUP$PrimeraPasada$top);
    }
}

}
