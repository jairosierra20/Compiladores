
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package codigo;

import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Sintax2 extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public Sintax2() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Sintax2(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax2(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\002\000\002\002\004\000\002\057\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\004\000\002\001\002\000\004\002\006\001\002\000" +
    "\004\002\000\001\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\004\000\006\002\004\057\003\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax2$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax2$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax2$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



	public String resultado="";
	public Nodo padre;
	public int contador = 1;
    @Override
    public void syntax_error(Symbol s){
        System.out.println("Error Sintactico en la Linea " + (s.right+1) +" Columna "+s.left+ ". Identificador " +s.value + " no reconocido." );
    }

    @Override
    public void unrecovered_syntax_error(Symbol s){
        //System.out.println("Error Sintactico en la Linea " + (s.right+1)+ "Columna "+s.left+". Identificador " + s.value + " no reconocido.");
		System.out.println(s);
	}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Sintax2$actions {




  private final Sintax2 parser;

  /** Constructor */
  CUP$Sintax2$actions(Sintax2 parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Sintax2$do_action_part00000000(
    int                        CUP$Sintax2$act_num,
    java_cup.runtime.lr_parser CUP$Sintax2$parser,
    java.util.Stack            CUP$Sintax2$stack,
    int                        CUP$Sintax2$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax2$result;

      /* select the action based on the action number */
      switch (CUP$Sintax2$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= S EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax2$stack.elementAt(CUP$Sintax2$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax2$stack.elementAt(CUP$Sintax2$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax2$stack.elementAt(CUP$Sintax2$top-1)).value;
		RESULT = start_val;
              CUP$Sintax2$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax2$stack.elementAt(CUP$Sintax2$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax2$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintax2$parser.done_parsing();
          return CUP$Sintax2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // S ::= INICIO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$Sintax2$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$Sintax2$stack.peek()).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$Sintax2$stack.peek()).value;
		 
        Nodo nd = new Nodo();
        nd.setNombre("INICIO");
        nd.setNumNodo(parser.contador++);
        parser.contador++;
        nd.addHijo((Nodo)n1);
        parser.padre = (Nodo)nd;
        RESULT = nd;:
};



INICIO::= SentenciaModulo:n Identificador:n1  Main:n2 parentesisE:n3 parentesisC:n4  End:n6 Sub:n7 End:n8 SentenciaModulo:n9 {:
    
        Nodo nd = new Nodo();
        nd.setNombre("Module");
        nd.setNumNodo(parser.contador++);
        parser.contador++;
        nd.addHijo((Nodo)n);
        nd.addHijo((Nodo)n1);
        nd.addHijo((Nodo)n2);
        nd.addHijo((Nodo)n3);
        nd.addHijo((Nodo)n4);
        //nd.addHijo((Nodo)n5);
        nd.addHijo((Nodo)n6);
        nd.addHijo((Nodo)n7);
        nd.addHijo((Nodo)n8);
        nd.addHijo((Nodo)n9);
        RESULT = nd;


              CUP$Sintax2$result = parser.getSymbolFactory().newSymbol("S",45, ((java_cup.runtime.Symbol)CUP$Sintax2$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax2$stack.peek()), RESULT);
            }
          return CUP$Sintax2$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Sintax2$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Sintax2$do_action(
    int                        CUP$Sintax2$act_num,
    java_cup.runtime.lr_parser CUP$Sintax2$parser,
    java.util.Stack            CUP$Sintax2$stack,
    int                        CUP$Sintax2$top)
    throws java.lang.Exception
    {
              return CUP$Sintax2$do_action_part00000000(
                               CUP$Sintax2$act_num,
                               CUP$Sintax2$parser,
                               CUP$Sintax2$stack,
                               CUP$Sintax2$top);
    }
}

}
